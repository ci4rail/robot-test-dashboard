[
    {
        "id": "4c878ae1.32bae4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b019dbf8.677588",
        "type": "mqtt-broker",
        "name": "MQTT",
        "broker": "172.17.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4364768f.a40d38",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#ff6116",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#ff6116",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#ff6116",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ff9562",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#ff6116",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY-MM-DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6c6174cc.b60f34",
        "type": "ui_tab",
        "name": "Robot Test Control",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "721af69.d130208",
        "type": "ui_tab",
        "name": "Demo",
        "icon": "dashboard"
    },
    {
        "id": "d46629e6.7ab2c8",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "74c69428.3abbdc",
        "type": "ui_group",
        "name": "Test-Status",
        "tab": "6c6174cc.b60f34",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "237da972.5d69a6",
        "type": "ui_group",
        "name": "ui-table with commands",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false
    },
    {
        "id": "c91332c0.50c11",
        "type": "ui_group",
        "name": "commands",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "625872f.40b1e8c",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ff9fdb9a.7da098",
        "type": "ui_group",
        "name": "TEST",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "51ce6aa1.620754",
        "type": "ui_group",
        "name": "ui_control",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "2dee2e04.7cf00a",
        "type": "ui_group",
        "name": "Test Messages",
        "tab": "721af69.d130208",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "bc355f75.adb21",
        "type": "inject",
        "z": "4c878ae1.32bae4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "6debd184.61566"
            ]
        ]
    },
    {
        "id": "49406610.c28f38",
        "type": "debug",
        "z": "4c878ae1.32bae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 380,
        "wires": []
    },
    {
        "id": "6debd184.61566",
        "type": "function",
        "z": "4c878ae1.32bae4",
        "name": "TableCache",
        "func": "function idxOfName(table, name){\n    idx = 0\n    for (const row of table) {\n        if( row.name == name){\n            return idx;\n        }\n        idx++;\n    }\n    return -1;\n}\n\nfunction compare(a, b) {\n    if (a.name < b.name)\n        return -1;\n    if (a.name > b.name)\n        return 1;\n    return 0;\n}\n\ntable = flow.get(\"table\");\n\nif('topic' in msg && msg.topic.endsWith(\"clear_table\")){\n    table = []\n    flow.set(\"table\", table);\n}\nelse if( 'payload' in msg ){\n    \n    idx = idxOfName(table, msg.payload.name);\n    \n    if(idx == -1){\n        table.push(msg.payload);\n    }\n    else {\n        if(msg.payload.errors > 0){\n            msg.payload.errors = \"<font color='red'><b>\" + msg.payload.errors + \"</b></font>\";            \n        }\n        if(msg.payload.status == \"Stopped\"){\n            msg.payload.status = \"<font color='yellow'>\" + msg.payload.status + \"</font>\";\n        }\n        table[idx] = msg.payload;\n    }\n    \n    table.sort(compare);\n    \n    flow.set(\"table\", table);\n}\n\nmsg = {}\nmsg.payload = []\n// ui-table only refreshes correctly when an empty array is sent first\nnode.send(msg)\n\nmsg.payload = table\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ntable = [];\nflow.set(\"table\", table);",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "4d8aa5d0.aa01ec"
            ]
        ]
    },
    {
        "id": "121b6e37.e949da",
        "type": "mqtt in",
        "z": "4c878ae1.32bae4",
        "name": "",
        "topic": "robot-test/results/+",
        "qos": "2",
        "datatype": "json",
        "broker": "b019dbf8.677588",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "5b891010.33e528"
            ]
        ]
    },
    {
        "id": "5b891010.33e528",
        "type": "change",
        "z": "4c878ae1.32bae4",
        "name": "topic to name",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "$split(topic,\"/\")[2]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "6debd184.61566"
            ]
        ]
    },
    {
        "id": "ca54a754.c8c998",
        "type": "mqtt out",
        "z": "4c878ae1.32bae4",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b019dbf8.677588",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "1e4eb64c.dc32aa",
        "type": "change",
        "z": "4c878ae1.32bae4",
        "name": "get last_error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.last_error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "f430eb76.6304c"
            ]
        ]
    },
    {
        "id": "f430eb76.6304c",
        "type": "function",
        "z": "4c878ae1.32bae4",
        "name": "",
        "func": "str = msg.payload\n\nmsg.payload = str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 440,
        "wires": [
            [
                "c7850b38.fbfac8"
            ]
        ]
    },
    {
        "id": "828796a6.5e221",
        "type": "ui_button",
        "z": "4c878ae1.32bae4",
        "name": "Clear Errors",
        "group": "74c69428.3abbdc",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Clear Errors",
        "tooltip": "Clear all error counters",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{}",
        "payloadType": "json",
        "topic": "robot-test/clear_error_counters",
        "topicType": "str",
        "x": 810,
        "y": 40,
        "wires": [
            [
                "ca54a754.c8c998"
            ]
        ]
    },
    {
        "id": "c7850b38.fbfac8",
        "type": "ui_template",
        "z": "4c878ae1.32bae4",
        "group": "74c69428.3abbdc",
        "name": "Error Details",
        "order": 2,
        "width": "17",
        "height": "2",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1350,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4d8aa5d0.aa01ec",
        "type": "ui_table",
        "z": "4c878ae1.32bae4",
        "group": "74c69428.3abbdc",
        "name": "result_table",
        "order": 0,
        "width": "20",
        "height": "20",
        "columns": [
            {
                "field": "name",
                "title": "Test-Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "success_cnt",
                "title": "# Success",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "errors",
                "title": "# Errors",
                "width": "8%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "last_error_ts",
                "title": "Last Error At",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "last_error",
                "title": "Last Error",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "8%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 850,
        "y": 380,
        "wires": [
            [
                "49406610.c28f38",
                "1e4eb64c.dc32aa"
            ]
        ]
    },
    {
        "id": "6914720e.56a31c",
        "type": "ui_button",
        "z": "4c878ae1.32bae4",
        "name": "Stop Tests",
        "group": "74c69428.3abbdc",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Stop All Tests",
        "tooltip": "Stop all tests",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{}",
        "payloadType": "json",
        "topic": "robot-test/stop_test",
        "topicType": "str",
        "x": 810,
        "y": 80,
        "wires": [
            [
                "ca54a754.c8c998"
            ]
        ]
    },
    {
        "id": "95e428f6.3dc94",
        "type": "mqtt in",
        "z": "4c878ae1.32bae4",
        "name": "",
        "topic": "robot-test/clear_table",
        "qos": "1",
        "datatype": "auto",
        "broker": "b019dbf8.677588",
        "nl": false,
        "rap": false,
        "rh": 0,
        "x": 440,
        "y": 500,
        "wires": [
            [
                "6debd184.61566",
                "5e876141.42a888"
            ]
        ]
    },
    {
        "id": "5e876141.42a888",
        "type": "debug",
        "z": "4c878ae1.32bae4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 500,
        "wires": []
    }
]